{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.6.18.56646",
      "templateHash": "12449661846954533761"
    }
  },
  "parameters": {
    "projectId": {
      "type": "string",
      "defaultValue": "00000000-0000-0000-0000-000000000000",
      "maxLength": 36,
      "minLength": 36
    },
    "projectName": {
      "type": "string",
      "defaultValue": ""
    },
    "projectTags": {
      "type": "object",
      "defaultValue": {}
    },
    "organizationId": {
      "type": "string",
      "maxLength": 36,
      "minLength": 36
    },
    "organizationName": {
      "type": "string"
    },
    "organizationTags": {
      "type": "object",
      "defaultValue": {}
    },
    "deploymentScopes": {
      "type": "array",
      "defaultValue": []
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]"
    }
  },
  "variables": {
    "deployProject": "[and(not(empty(parameters('projectName'))), not(equals(parameters('projectId'), '00000000-0000-0000-0000-000000000000')))]",
    "projectResourceGroupName": "[format('TCP-{0}-{1}', parameters('projectName'), uniqueString(parameters('projectId')))]",
    "projectDeploymentName": "[take(format('{0}-project', deployment().name), 64)]",
    "deployOrganization": "[not(variables('deployProject'))]",
    "organizationResourceGroupName": "[format('TCO-{0}-{1}', parameters('organizationName'), uniqueString(parameters('organizationId')))]",
    "organizationDeploymentName": "[take(format('{0}-organization', deployment().name), 64)]"
  },
  "resources": [
    {
      "condition": "[variables('deployOrganization')]",
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2019-10-01",
      "name": "[variables('organizationResourceGroupName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('organizationTags')]"
    },
    {
      "condition": "[variables('deployProject')]",
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2019-10-01",
      "name": "[variables('projectResourceGroupName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('projectTags')]"
    },
    {
      "condition": "[variables('deployOrganization')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[variables('organizationDeploymentName')]",
      "resourceGroup": "[variables('organizationResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "organizationTags": {
            "value": "[parameters('organizationTags')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "6630954116616674082"
            }
          },
          "parameters": {
            "organizationTags": {
              "type": "object",
              "defaultValue": {}
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "resourcePrefix": "tc",
            "resourceName": "[format('{0}{1}', variables('resourcePrefix'), uniqueString(resourceGroup().id))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}-secrets', variables('resourceName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('organizationTags')]",
              "properties": {
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": []
              }
            },
            {
              "type": "Microsoft.Compute/galleries",
              "apiVersion": "2020-09-30",
              "name": "[variables('resourceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('organizationTags')]",
              "properties": {}
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2019-12-01-preview",
              "name": "[variables('resourceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('organizationTags')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "adminUserEnabled": false
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "name": "[variables('resourceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('organizationTags')]",
              "kind": "StorageV2",
              "sku": {
                "name": "Premium_LRS"
              }
            }
          ],
          "outputs": {
            "organizationData": {
              "type": "object",
              "value": {
                "resourceId": "[resourceGroup().id]",
                "secretsVaultId": "[resourceId('Microsoft.KeyVault/vaults', format('{0}-secrets', variables('resourceName')))]",
                "galleryId": "[resourceId('Microsoft.Compute/galleries', variables('resourceName'))]",
                "registryId": "[resourceId('Microsoft.ContainerRegistry/registries', variables('resourceName'))]",
                "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('resourceName'))]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('organizationResourceGroupName'))]"
      ]
    },
    {
      "condition": "[variables('deployProject')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[variables('projectDeploymentName')]",
      "resourceGroup": "[variables('projectResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[parameters('projectTags')]"
          },
          "deploymentScopes": {
            "value": "[parameters('deploymentScopes')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "3012057187987969088"
            }
          },
          "parameters": {
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "deploymentScopes": {
              "type": "array",
              "defaultValue": []
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "variables": {
            "resourcePrefix": "tc",
            "uniqueName": "[format('{0}{1}', variables('resourcePrefix'), uniqueString(resourceGroup().id))]"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}-shared', variables('uniqueName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": []
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}-secrets', variables('uniqueName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": []
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "name": "[variables('uniqueName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {},
              "tags": "[parameters('tags')]"
            },
            {
              "condition": "[not(empty(parameters('deploymentScopes')))]",
              "copy": {
                "name": "projectIdentities",
                "count": "[length(parameters('deploymentScopes'))]"
              },
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[parameters('deploymentScopes')[copyIndex()]]",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "projectData": {
              "type": "object",
              "value": {
                "resourceId": "[resourceGroup().id]",
                "sharedVaultId": "[resourceId('Microsoft.KeyVault/vaults', format('{0}-shared', variables('uniqueName')))]",
                "secretsVaultId": "[resourceId('Microsoft.KeyVault/vaults', format('{0}-secrets', variables('uniqueName')))]",
                "storageId": "[resourceId('Microsoft.Storage/storageAccounts', variables('uniqueName'))]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('projectResourceGroupName'))]"
      ]
    }
  ],
  "outputs": {
    "organizationData": {
      "type": "object",
      "value": "[if(variables('deployOrganization'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('organizationResourceGroupName')), 'Microsoft.Resources/deployments', variables('organizationDeploymentName')), '2020-10-01').outputs.organizationData.value, createObject())]"
    },
    "projectData": {
      "type": "object",
      "value": "[if(variables('deployProject'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('projectResourceGroupName')), 'Microsoft.Resources/deployments', variables('projectDeploymentName')), '2020-10-01').outputs.projectData.value, createObject())]"
    }
  }
}