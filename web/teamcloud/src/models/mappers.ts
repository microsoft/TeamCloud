/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as coreHttp from "@azure/core-http";

export const AdapterInformationListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdapterInformationListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "AdapterInformation"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const AdapterInformation: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AdapterInformation",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        nullable: true,
        type: {
          name: "String"
        }
      },
      inputDataSchema: {
        serializedName: "inputDataSchema",
        nullable: true,
        type: {
          name: "String"
        }
      },
      inputDataForm: {
        serializedName: "inputDataForm",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ErrorResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ErrorResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      errors: {
        serializedName: "errors",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResultError"
            }
          }
        }
      }
    }
  }
};

export const ResultError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ResultError",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        nullable: true,
        type: {
          name: "String"
        }
      },
      errors: {
        serializedName: "errors",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ValidationError"
            }
          }
        }
      }
    }
  }
};

export const ValidationError: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ValidationError",
    modelProperties: {
      field: {
        serializedName: "field",
        nullable: true,
        type: {
          name: "String"
        }
      },
      message: {
        serializedName: "message",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Component"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Component: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Component",
    modelProperties: {
      href: {
        serializedName: "href",
        nullable: true,
        type: {
          name: "String"
        }
      },
      organization: {
        serializedName: "organization",
        required: true,
        type: {
          name: "String"
        }
      },
      templateId: {
        serializedName: "templateId",
        required: true,
        type: {
          name: "String"
        }
      },
      projectId: {
        serializedName: "projectId",
        required: true,
        type: {
          name: "String"
        }
      },
      creator: {
        serializedName: "creator",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        nullable: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        nullable: true,
        type: {
          name: "String"
        }
      },
      inputJson: {
        serializedName: "inputJson",
        nullable: true,
        type: {
          name: "String"
        }
      },
      valueJson: {
        serializedName: "valueJson",
        nullable: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      resourceUrl: {
        serializedName: "resourceUrl",
        nullable: true,
        type: {
          name: "String"
        }
      },
      resourceState: {
        serializedName: "resourceState",
        type: {
          name: "String"
        }
      },
      deploymentScopeId: {
        serializedName: "deploymentScopeId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      identityId: {
        serializedName: "identityId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      deleted: {
        serializedName: "deleted",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      ttl: {
        serializedName: "ttl",
        nullable: true,
        type: {
          name: "Number"
        }
      },
      slug: {
        serializedName: "slug",
        required: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentDefinition: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentDefinition",
    modelProperties: {
      templateId: {
        serializedName: "templateId",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      inputJson: {
        serializedName: "inputJson",
        nullable: true,
        type: {
          name: "String"
        }
      },
      deploymentScopeId: {
        serializedName: "deploymentScopeId",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "Component"
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StatusResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StatusResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      state: {
        serializedName: "state",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      stateMessage: {
        serializedName: "stateMessage",
        nullable: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      },
      errors: {
        serializedName: "errors",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ResultError"
            }
          }
        }
      },
      trackingId: {
        serializedName: "_trackingId",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentTaskListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentTaskListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComponentTask"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentTask: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentTask",
    modelProperties: {
      organization: {
        serializedName: "organization",
        required: true,
        type: {
          name: "String"
        }
      },
      componentId: {
        serializedName: "componentId",
        required: true,
        type: {
          name: "String"
        }
      },
      projectId: {
        serializedName: "projectId",
        required: true,
        type: {
          name: "String"
        }
      },
      requestedBy: {
        serializedName: "requestedBy",
        nullable: true,
        type: {
          name: "String"
        }
      },
      scheduleId: {
        serializedName: "scheduleId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      typeName: {
        serializedName: "typeName",
        nullable: true,
        type: {
          name: "String"
        }
      },
      created: {
        serializedName: "created",
        type: {
          name: "DateTime"
        }
      },
      started: {
        serializedName: "started",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      finished: {
        serializedName: "finished",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      inputJson: {
        serializedName: "inputJson",
        nullable: true,
        type: {
          name: "String"
        }
      },
      output: {
        serializedName: "output",
        nullable: true,
        type: {
          name: "String"
        }
      },
      resourceId: {
        serializedName: "resourceId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      resourceState: {
        serializedName: "resourceState",
        type: {
          name: "String"
        }
      },
      exitCode: {
        serializedName: "exitCode",
        nullable: true,
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentTaskDefinition: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentTaskDefinition",
    modelProperties: {
      taskId: {
        serializedName: "taskId",
        required: true,
        type: {
          name: "String"
        }
      },
      inputJson: {
        serializedName: "inputJson",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentTaskDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentTaskDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "ComponentTask"
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentTemplateListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentTemplateListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComponentTemplate"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentTemplate: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentTemplate",
    modelProperties: {
      organization: {
        serializedName: "organization",
        required: true,
        type: {
          name: "String"
        }
      },
      parentId: {
        serializedName: "parentId",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        nullable: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        nullable: true,
        type: {
          name: "String"
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "Composite",
          className: "RepositoryReference"
        }
      },
      permissions: {
        serializedName: "permissions",
        type: {
          name: "Composite",
          className: "ComponentTemplatePermissions"
        }
      },
      inputJsonSchema: {
        serializedName: "inputJsonSchema",
        nullable: true,
        type: {
          name: "String"
        }
      },
      tasks: {
        serializedName: "tasks",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComponentTaskTemplate"
            }
          }
        }
      },
      taskRunner: {
        serializedName: "taskRunner",
        type: {
          name: "Composite",
          className: "ComponentTaskRunner"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      folder: {
        serializedName: "folder",
        nullable: true,
        type: {
          name: "String"
        }
      },
      configuration: {
        serializedName: "configuration",
        nullable: true,
        type: {
          name: "any"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const RepositoryReference: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RepositoryReference",
    modelProperties: {
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        nullable: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        nullable: true,
        type: {
          name: "String"
        }
      },
      baselUrl: {
        serializedName: "baselUrl",
        nullable: true,
        type: {
          name: "String"
        }
      },
      mountUrl: {
        serializedName: "mountUrl",
        nullable: true,
        type: {
          name: "String"
        }
      },
      ref: {
        serializedName: "ref",
        nullable: true,
        type: {
          name: "String"
        }
      },
      provider: {
        serializedName: "provider",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      organization: {
        serializedName: "organization",
        nullable: true,
        type: {
          name: "String"
        }
      },
      repository: {
        serializedName: "repository",
        nullable: true,
        type: {
          name: "String"
        }
      },
      project: {
        serializedName: "project",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentTemplatePermissions: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentTemplatePermissions",
    modelProperties: {
      none: {
        serializedName: "None",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      member: {
        serializedName: "Member",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      admin: {
        serializedName: "Admin",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      owner: {
        serializedName: "Owner",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      adapter: {
        serializedName: "Adapter",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      }
    }
  }
};

export const ComponentTaskTemplate: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentTaskTemplate",
    modelProperties: {
      id: {
        serializedName: "id",
        nullable: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        nullable: true,
        type: {
          name: "String"
        }
      },
      description: {
        serializedName: "description",
        nullable: true,
        type: {
          name: "String"
        }
      },
      inputJsonSchema: {
        serializedName: "inputJsonSchema",
        nullable: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      typeName: {
        serializedName: "typeName",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentTaskRunner: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentTaskRunner",
    modelProperties: {
      id: {
        serializedName: "id",
        nullable: true,
        type: {
          name: "String"
        }
      },
      with: {
        serializedName: "with",
        nullable: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const ComponentTemplateDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentTemplateDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "ComponentTemplate"
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeploymentScopeListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentScopeListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "DeploymentScope"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeploymentScope: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentScope",
    modelProperties: {
      organization: {
        serializedName: "organization",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      slug: {
        serializedName: "slug",
        required: true,
        type: {
          name: "String"
        }
      },
      isDefault: {
        serializedName: "isDefault",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      inputDataSchema: {
        serializedName: "inputDataSchema",
        nullable: true,
        type: {
          name: "String"
        }
      },
      inputData: {
        serializedName: "inputData",
        nullable: true,
        type: {
          name: "String"
        }
      },
      managementGroupId: {
        serializedName: "managementGroupId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      subscriptionIds: {
        serializedName: "subscriptionIds",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Uuid"
            }
          }
        }
      },
      authorizable: {
        serializedName: "authorizable",
        type: {
          name: "Boolean"
        }
      },
      authorized: {
        serializedName: "authorized",
        type: {
          name: "Boolean"
        }
      },
      authorizeUrl: {
        serializedName: "authorizeUrl",
        nullable: true,
        type: {
          name: "String"
        }
      },
      componentTypes: {
        serializedName: "componentTypes",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const DeploymentScopeDefinition: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentScopeDefinition",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      type: {
        serializedName: "type",
        required: true,
        type: {
          name: "String"
        }
      },
      slug: {
        serializedName: "slug",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      inputData: {
        serializedName: "inputData",
        nullable: true,
        type: {
          name: "String"
        }
      },
      isDefault: {
        serializedName: "isDefault",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};

export const DeploymentScopeDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "DeploymentScopeDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "DeploymentScope"
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommandAuditEntityListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommandAuditEntityListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "CommandAuditEntity"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const CommandAuditEntity: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommandAuditEntity",
    modelProperties: {
      commandId: {
        serializedName: "commandId",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      organizationId: {
        serializedName: "organizationId",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      commandJson: {
        serializedName: "commandJson",
        nullable: true,
        type: {
          name: "String"
        }
      },
      resultJson: {
        serializedName: "resultJson",
        nullable: true,
        type: {
          name: "String"
        }
      },
      projectId: {
        serializedName: "projectId",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      userId: {
        serializedName: "userId",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      parentId: {
        serializedName: "parentId",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      command: {
        serializedName: "command",
        nullable: true,
        type: {
          name: "String"
        }
      },
      componentTask: {
        serializedName: "componentTask",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      runtimeStatus: {
        serializedName: "runtimeStatus",
        type: {
          name: "String"
        }
      },
      customStatus: {
        serializedName: "customStatus",
        nullable: true,
        type: {
          name: "String"
        }
      },
      errors: {
        serializedName: "errors",
        nullable: true,
        type: {
          name: "String"
        }
      },
      created: {
        serializedName: "created",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      updated: {
        serializedName: "updated",
        nullable: true,
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const CommandAuditEntityDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "CommandAuditEntityDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "CommandAuditEntity"
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StringListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StringListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Organization"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Organization: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Organization",
    modelProperties: {
      tenant: {
        serializedName: "tenant",
        required: true,
        type: {
          name: "String"
        }
      },
      slug: {
        serializedName: "slug",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      },
      tags: {
        serializedName: "tags",
        nullable: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      resourceId: {
        serializedName: "resourceId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      resourceState: {
        serializedName: "resourceState",
        type: {
          name: "String"
        }
      },
      galleryId: {
        serializedName: "galleryId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      registryId: {
        serializedName: "registryId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      storageId: {
        serializedName: "storageId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationDefinition: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationDefinition",
    modelProperties: {
      slug: {
        serializedName: "slug",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      subscriptionId: {
        serializedName: "subscriptionId",
        required: true,
        type: {
          name: "String"
        }
      },
      location: {
        serializedName: "location",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const OrganizationDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "OrganizationDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "Organization"
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "User"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const User: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "User",
    modelProperties: {
      organization: {
        serializedName: "organization",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        nullable: true,
        type: {
          name: "String"
        }
      },
      loginName: {
        serializedName: "loginName",
        nullable: true,
        type: {
          name: "String"
        }
      },
      mailAddress: {
        serializedName: "mailAddress",
        nullable: true,
        type: {
          name: "String"
        }
      },
      userType: {
        serializedName: "userType",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String"
        }
      },
      projectMemberships: {
        serializedName: "projectMemberships",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProjectMembership"
            }
          }
        }
      },
      alternateIdentities: {
        serializedName: "alternateIdentities",
        type: {
          name: "Composite",
          className: "UserAlternateIdentities"
        }
      },
      properties: {
        serializedName: "properties",
        nullable: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectMembership: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectMembership",
    modelProperties: {
      projectId: {
        serializedName: "projectId",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        nullable: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const UserAlternateIdentities: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserAlternateIdentities",
    modelProperties: {
      azureResourceManager: {
        serializedName: "AzureResourceManager",
        type: {
          name: "Composite",
          className: "AlternateIdentity"
        }
      },
      azureDevOps: {
        serializedName: "AzureDevOps",
        type: {
          name: "Composite",
          className: "AlternateIdentity"
        }
      },
      gitHub: {
        serializedName: "GitHub",
        type: {
          name: "Composite",
          className: "AlternateIdentity"
        }
      }
    }
  }
};

export const AlternateIdentity: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "AlternateIdentity",
    modelProperties: {
      login: {
        serializedName: "login",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const UserDefinition: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserDefinition",
    modelProperties: {
      identifier: {
        serializedName: "identifier",
        required: true,
        type: {
          name: "String"
        }
      },
      role: {
        serializedName: "role",
        required: true,
        type: {
          name: "String"
        }
      },
      properties: {
        serializedName: "properties",
        nullable: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      }
    }
  }
};

export const UserDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "UserDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "User"
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Project"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Project: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Project",
    modelProperties: {
      organization: {
        serializedName: "organization",
        required: true,
        type: {
          name: "String"
        }
      },
      slug: {
        serializedName: "slug",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      template: {
        serializedName: "template",
        required: true,
        type: {
          name: "String"
        }
      },
      templateInput: {
        serializedName: "templateInput",
        nullable: true,
        type: {
          name: "String"
        }
      },
      users: {
        serializedName: "users",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "User"
            }
          }
        }
      },
      tags: {
        serializedName: "tags",
        nullable: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      resourceId: {
        serializedName: "resourceId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      resourceState: {
        serializedName: "resourceState",
        type: {
          name: "String"
        }
      },
      vaultId: {
        serializedName: "vaultId",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      sharedVaultId: {
        serializedName: "sharedVaultId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      secretsVaultId: {
        serializedName: "secretsVaultId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      storageId: {
        serializedName: "storageId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectDefinition: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectDefinition",
    modelProperties: {
      slug: {
        serializedName: "slug",
        readOnly: true,
        nullable: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      template: {
        serializedName: "template",
        required: true,
        type: {
          name: "String"
        }
      },
      templateInput: {
        serializedName: "templateInput",
        required: true,
        type: {
          name: "String"
        }
      },
      users: {
        serializedName: "users",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "UserDefinition"
            }
          }
        }
      }
    }
  }
};

export const ProjectDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "Project"
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectIdentityListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectIdentityListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProjectIdentity"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectIdentity: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectIdentity",
    modelProperties: {
      projectId: {
        serializedName: "projectId",
        required: true,
        type: {
          name: "String"
        }
      },
      organization: {
        serializedName: "organization",
        required: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      deploymentScopeId: {
        serializedName: "deploymentScopeId",
        required: true,
        type: {
          name: "String"
        }
      },
      tenantId: {
        serializedName: "tenantId",
        type: {
          name: "Uuid"
        }
      },
      clientId: {
        serializedName: "clientId",
        type: {
          name: "Uuid"
        }
      },
      clientSecret: {
        serializedName: "clientSecret",
        nullable: true,
        type: {
          name: "String"
        }
      },
      redirectUrls: {
        serializedName: "redirectUrls",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      objectId: {
        serializedName: "objectId",
        type: {
          name: "Uuid"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectIdentityDefinition: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectIdentityDefinition",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      deploymentScopeId: {
        serializedName: "deploymentScopeId",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectIdentityDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectIdentityDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "ProjectIdentity"
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const StringDictionaryDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "StringDictionaryDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Dictionary",
          value: { type: { name: "String" } }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectTemplateListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectTemplateListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ProjectTemplate"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectTemplate: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectTemplate",
    modelProperties: {
      organization: {
        serializedName: "organization",
        required: true,
        type: {
          name: "String"
        }
      },
      slug: {
        serializedName: "slug",
        required: true,
        type: {
          name: "String"
        }
      },
      name: {
        serializedName: "name",
        nullable: true,
        type: {
          name: "String"
        }
      },
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      components: {
        serializedName: "components",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "Composite",
          className: "RepositoryReference"
        }
      },
      description: {
        serializedName: "description",
        nullable: true,
        type: {
          name: "String"
        }
      },
      isDefault: {
        serializedName: "isDefault",
        required: true,
        type: {
          name: "Boolean"
        }
      },
      inputJsonSchema: {
        serializedName: "inputJsonSchema",
        nullable: true,
        type: {
          name: "String"
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectTemplateDefinition: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectTemplateDefinition",
    modelProperties: {
      displayName: {
        serializedName: "displayName",
        required: true,
        type: {
          name: "String"
        }
      },
      repository: {
        serializedName: "repository",
        type: {
          name: "Composite",
          className: "RepositoryDefinition"
        }
      }
    }
  }
};

export const RepositoryDefinition: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "RepositoryDefinition",
    modelProperties: {
      url: {
        serializedName: "url",
        required: true,
        type: {
          name: "String"
        }
      },
      token: {
        serializedName: "token",
        nullable: true,
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProjectTemplateDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ProjectTemplateDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "ProjectTemplate"
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScheduleListDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScheduleListDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        readOnly: true,
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "Schedule"
            }
          }
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Schedule: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "Schedule",
    modelProperties: {
      organization: {
        serializedName: "organization",
        required: true,
        type: {
          name: "String"
        }
      },
      projectId: {
        serializedName: "projectId",
        required: true,
        type: {
          name: "String"
        }
      },
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      recurring: {
        serializedName: "recurring",
        type: {
          name: "Boolean"
        }
      },
      daysOfWeek: {
        serializedName: "daysOfWeek",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      utcHour: {
        serializedName: "utcHour",
        type: {
          name: "Number"
        }
      },
      utcMinute: {
        serializedName: "utcMinute",
        type: {
          name: "Number"
        }
      },
      creator: {
        serializedName: "creator",
        nullable: true,
        type: {
          name: "String"
        }
      },
      created: {
        serializedName: "created",
        type: {
          name: "DateTime"
        }
      },
      lastUpdatedBy: {
        serializedName: "lastUpdatedBy",
        nullable: true,
        type: {
          name: "String"
        }
      },
      lastUpdated: {
        serializedName: "lastUpdated",
        type: {
          name: "DateTime"
        }
      },
      lastRun: {
        serializedName: "lastRun",
        nullable: true,
        type: {
          name: "DateTime"
        }
      },
      componentTasks: {
        serializedName: "componentTasks",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComponentTaskReference"
            }
          }
        }
      },
      id: {
        serializedName: "id",
        required: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ComponentTaskReference: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ComponentTaskReference",
    modelProperties: {
      componentId: {
        serializedName: "componentId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      componentTaskTemplateId: {
        serializedName: "componentTaskTemplateId",
        nullable: true,
        type: {
          name: "String"
        }
      },
      inputJson: {
        serializedName: "inputJson",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ScheduleDefinition: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScheduleDefinition",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      recurring: {
        serializedName: "recurring",
        type: {
          name: "Boolean"
        }
      },
      daysOfWeek: {
        serializedName: "daysOfWeek",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "String"
            }
          }
        }
      },
      utcHour: {
        serializedName: "utcHour",
        type: {
          name: "Number"
        }
      },
      utcMinute: {
        serializedName: "utcMinute",
        type: {
          name: "Number"
        }
      },
      componentTasks: {
        serializedName: "componentTasks",
        nullable: true,
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "ComponentTaskReference"
            }
          }
        }
      }
    }
  }
};

export const ScheduleDataResult: coreHttp.CompositeMapper = {
  type: {
    name: "Composite",
    className: "ScheduleDataResult",
    modelProperties: {
      code: {
        serializedName: "code",
        type: {
          name: "Number"
        }
      },
      status: {
        serializedName: "status",
        nullable: true,
        type: {
          name: "String"
        }
      },
      data: {
        serializedName: "data",
        type: {
          name: "Composite",
          className: "Schedule"
        }
      },
      location: {
        serializedName: "location",
        nullable: true,
        type: {
          name: "String"
        }
      }
    }
  }
};
