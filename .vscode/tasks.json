{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "docker: build push all (latest)",
            "type": "shell",
            "command": "echo done.",
            "dependsOrder": "sequence",
            "dependsOn": [
                "publish all",
                "docker: build all (latest)",
                "acr: login",
                "docker: push all (latest)"
            ]
        },
        {
            "label": "publish all",
            "type": "shell",
            "command": "echo done.",
            "dependsOn": [
                "npm: run build",
                "dotnet: build publish API and Orchestrator",
                "bicep: local"
            ]
        },
        {
            "type": "func",
            "options": {
                "cwd": "${workspaceFolder}/src/TeamCloud.Orchestrator/bin/Debug/net6.0"
            },
            "command": "start --no-build",
            "isBackground": true,
            "problemMatcher": "$func-watch",
            "presentation": {
                "panel": "dedicated",
                "showReuseMessage": false
            }
        },
        {
            "label": "dotnet: build sln (debug)",
            "command": "dotnet",
            "args": [
                "build",
                "${workspaceFolder}/src/TeamCloud.sln",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary"
            ],
            "type": "process",
            "dependsOn": "dotnet: clean sln",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$msCompile",
            "options": {
                "cwd": "${workspaceFolder}/src"
            },
            "presentation": {
                "group": "build",
                "showReuseMessage": false
            }
        },
        {
            "label": "dotnet: clean sln",
            "command": "dotnet",
            "args": [
                "clean",
                "${workspaceFolder}/src/TeamCloud.sln",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary"
            ],
            "type": "process",
            "problemMatcher": "$msCompile",
            "options": {
                "cwd": "${workspaceFolder}/src"
            },
            "presentation": {
                "group": "build",
                "showReuseMessage": false
            }
        },
        {
            "label": "dotnet: build publish API and Orchestrator",
            "type": "shell",
            "command": "echo done.",
            "dependsOrder": "sequence",
            "dependsOn": [
                "dotnet: build sln (release)",
                "dotnet: publish API",
                "dotnet: publish Orchestrator"
            ]
        },
        {
            "label": "dotnet: publish API",
            "command": "dotnet",
            "args": [
                "publish",
                "${workspaceFolder}/src/TeamCloud.API/TeamCloud.API.csproj",
                "-o",
                "${workspaceFolder}/src/TeamCloud.API/publish",
                "-c",
                "Release",
                "-p:VersionPrefix=${input:dotnetReleaseVersion}",
                "-p:AssemblyVersion=${input:dotnetReleaseVersion}",
                "-p:FileVersion=${input:dotnetReleaseVersion}",
                "-p:IncludeSymbols=true",
                "--no-build"
            ],
            "type": "process",
            "problemMatcher": "$msCompile",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "showReuseMessage": false
            }
        },
        {
            "label": "dotnet: publish Orchestrator",
            "command": "dotnet",
            "args": [
                "publish",
                "${workspaceFolder}/src/TeamCloud.Orchestrator/TeamCloud.Orchestrator.csproj",
                "-o",
                "${workspaceFolder}/src/TeamCloud.Orchestrator/publish",
                "-c",
                "Release",
                "-p:VersionPrefix=${input:dotnetReleaseVersion}",
                "-p:AssemblyVersion=${input:dotnetReleaseVersion}",
                "-p:FileVersion=${input:dotnetReleaseVersion}",
                "-p:IncludeSymbols=true",
                "--no-build"
            ],
            "type": "process",
            "problemMatcher": "$msCompile",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "showReuseMessage": false
            }
        },
        {
            "label": "dotnet: build sln (release)",
            "command": "dotnet",
            "args": [
                "build",
                "${workspaceFolder}/src/TeamCloud.sln",
                "-c",
                "Release",
                "-p:VersionPrefix=${input:dotnetReleaseVersion}",
                "-p:AssemblyVersion=${input:dotnetReleaseVersion}",
                "-p:FileVersion=${input:dotnetReleaseVersion}",
                "-p:IncludeSymbols=true"
            ],
            "type": "process",
            "dependsOn": "dotnet: clean sln",
            "problemMatcher": "$msCompile",
            "options": {
                "cwd": "${workspaceFolder}/src"
            },
            "presentation": {
                "group": "build",
                "showReuseMessage": false
            }
        },
        {
            "label": "ngrok: start",
            "command": "ngrok",
            "args": [
                "http",
                "--region=us",
                "https://localhost:5001"
            ],
            "isBackground": true,
            "presentation": {
                "panel": "dedicated",
                "showReuseMessage": false
            },
            "problemMatcher": []
        },
        {
            "label": "ngrok: set url",
            "command": "python3",
            "args": [
                "scripts/get-url.py"
            ],
            "problemMatcher": [],
            "presentation": {
                "reveal": "silent",
                "close": true
            }
        },
        {
            "label": "npm: start",
            "command": "npm",
            "args": [
                "start"
            ],
            "isBackground": true,
            "presentation": {
                "panel": "dedicated",
                "showReuseMessage": false
            },
            "options": {
                "cwd": "${workspaceFolder}/web"
            },
            "dependsOn": [
                "ngrok: set url"
            ],
            "problemMatcher": []
        },
        {
            "label": "npm: run build",
            "command": "npm",
            "args": [
                "run",
                "build"
            ],
            "isBackground": true,
            "presentation": {
                "panel": "dedicated",
                "showReuseMessage": false
            },
            "options": {
                "cwd": "${workspaceFolder}/web"
            }
        },
        {
            "label": "bicep: local",
            "command": "az",
            "args": [
                "bicep",
                "build",
                "-f",
                "${workspaceFolder}/deploy/bicep/main.bicep",
                "--outfile",
                "${workspaceFolder}/local/release_assets/azuredeploy.json"
            ],
            "presentation": {
                "showReuseMessage": false
            },
            "problemMatcher": []
        },
        {
            "label": "docker: build all (latest)",
            "type": "shell",
            "command": "echo done.",
            "dependsOrder": "sequence",
            "dependsOn": [
                "docker: build api",
                "docker: build orchestrator",
                "docker: build web"
            ],
            "problemMatcher": []
        },
        {
            "label": "docker: build api",
            "type": "docker-build",
            "dockerBuild": {
                "context": "${workspaceFolder}/src/TeamCloud.API",
                "dockerfile": "${workspaceFolder}/src/TeamCloud.API/Dockerfile",
                "tag": "teamcloud.azurecr.io/${input:imageRepository}/api:${input:imageTagVersion}",
                "customOptions": "-t \"teamcloud.azurecr.io/${input:imageRepository}/api:latest\"",
                "buildArgs": {
                    "image_version": "${input:imageTagVersion}"
                },
                "labels": {
                    "includeDefaults": false
                }
            }
        },
        {
            "label": "docker: build orchestrator",
            "type": "docker-build",
            "dockerBuild": {
                "context": "${workspaceFolder}/src/TeamCloud.Orchestrator",
                "dockerfile": "${workspaceFolder}/src/TeamCloud.Orchestrator/Dockerfile",
                "tag": "teamcloud.azurecr.io/${input:imageRepository}/orchestrator:${input:imageTagVersion}",
                "customOptions": "-t \"teamcloud.azurecr.io/${input:imageRepository}/orchestrator:latest\"",
                "buildArgs": {
                    "image_version": "${input:imageTagVersion}"
                },
                "labels": {
                    "includeDefaults": false
                }
            }
        },
        {
            "label": "docker: build web",
            "type": "docker-build",
            "dockerBuild": {
                "context": "${workspaceFolder}/web",
                "dockerfile": "${workspaceFolder}/web/Dockerfile",
                "tag": "teamcloud.azurecr.io/${input:imageRepository}/website:${input:imageTagVersion}",
                "customOptions": "-t \"teamcloud.azurecr.io/${input:imageRepository}/website:latest\"",
                "buildArgs": {
                    "image_version": "${input:imageTagVersion}"
                },
                "labels": {
                    "includeDefaults": false
                }
            }
        },
        {
            "label": "docker: push all (latest)",
            "type": "shell",
            "command": "echo done.",
            "dependsOrder": "sequence",
            "dependsOn": [
                "acr: login",
                "docker: push web (latest)",
                "docker: push api (latest)",
                "docker: push orchestrator (latest)"
            ],
            "problemMatcher": []
        },
        {
            "label": "docker: push web",
            "command": "docker",
            "args": [
                "push",
                "teamcloud.azurecr.io/${input:imageRepository}/website:${input:imageTagVersion}"
            ],
            "dependsOn": []
        },
        {
            "label": "docker: push web (latest)",
            "command": "docker",
            "args": [
                "push",
                "teamcloud.azurecr.io/${input:imageRepository}/website:latest"
            ],
            "dependsOn": [
                "docker: push web"
            ],
            "problemMatcher": []
        },
        {
            "label": "docker: push api",
            "command": "docker",
            "args": [
                "push",
                "teamcloud.azurecr.io/${input:imageRepository}/api:${input:imageTagVersion}"
            ],
            "dependsOn": []
        },
        {
            "label": "docker: push api (latest)",
            "command": "docker",
            "args": [
                "push",
                "teamcloud.azurecr.io/${input:imageRepository}/api:latest"
            ],
            "dependsOn": [
                "docker: push api"
            ],
            "problemMatcher": []
        },
        {
            "label": "docker: push orchestrator",
            "command": "docker",
            "args": [
                "push",
                "teamcloud.azurecr.io/${input:imageRepository}/orchestrator:${input:imageTagVersion}"
            ],
            "dependsOn": []
        },
        {
            "label": "docker: push orchestrator (latest)",
            "command": "docker",
            "args": [
                "push",
                "teamcloud.azurecr.io/${input:imageRepository}/orchestrator:latest"
            ],
            "dependsOn": [
                "docker: push orchestrator"
            ],
            "problemMatcher": []
        },
        {
            "label": "acr: login",
            "command": "az",
            "args": [
                "acr",
                "login",
                "-n",
                "teamcloud"
            ],
            "problemMatcher": []
        },
        {
            "label": "cli: setup azdev",
            "type": "shell",
            "command": "source client/env/bin/activate; azdev setup -r ${workspaceFolder} -e tc",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "showReuseMessage": false
            },
            "dependsOrder": "sequence",
            "dependsOn": [
                "cli: create venv",
                "cli: install azdev"
            ],
            "problemMatcher": []
        },
        {
            "label": "cli: install azdev",
            "type": "shell",
            "command": "source client/env/bin/activate; pip3 install azdev",
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "showReuseMessage": false
            }
        },
        {
            "label": "cli: create venv",
            "type": "shell",
            "command": "python3",
            "args": [
                "-m",
                "venv",
                "env"
            ],
            "options": {
                "cwd": "${workspaceFolder}/client"
            },
            "presentation": {
                "showReuseMessage": false
            }
        },
        {
            "label": "cli: delete env",
            "type": "shell",
            "command": "rm",
            "args": [
                "-r",
                "env"
            ],
            "options": {
                "cwd": "${workspaceFolder}/client"
            },
            "presentation": {
                "showReuseMessage": false
            },
            "problemMatcher": []
        },
        {
            "label": "func: delete task hub",
            "command": "func",
            "args": [
                "durable",
                "delete-task-hub",
                "--connection-string-setting",
                "DurableFunctionsHubStorage"
            ],
            "options": {
                "cwd": "${workspaceFolder}/src/TeamCloud.Orchestrator"
            },
            "presentation": {
                "showReuseMessage": false
            },
            "problemMatcher": []
        },
        {
            "label": "create clients",
            "type": "shell",
            "command": "${workspaceFolder}/scripts/create-clients.sh",
            "options": {
                "shell": {
                    "executable": "/bin/sh"
                }
            },
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "imageRepository",
            "type": "pickString",
            "description": "Repository name to push the image.",
            "default": "teamcloud-dev",
            "options": [
                "teamcloud-dev",
                "teamcloud"
            ]
        },
        {
            "id": "imageTagVersion",
            "type": "promptString",
            "description": "Version for this tag (also builds a latest version).",
            "default": "0.0.0"
        },
        {
            "id": "dotnetReleaseVersion",
            "type": "promptString",
            "description": "Version for this dotnet release.",
            "default": "1.0.0"
        },
        {
            "id": "imageName",
            "type": "pickString",
            "description": "Image name.",
            "options": [
                "api",
                "orchestrator",
                "website"
            ]
        }
    ]
}